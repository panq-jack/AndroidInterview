
https://v.qq.com/x/page/a03916l1n7h.html


Linux进程：
Linux进程，它有独立的内核堆栈和独立的存储空间，它是操作系统中资源分配和调度的最小单位。

Linux操作系统会以进程为单位，分配系统资源，给程序进行调度。

Linux操作系统在执行一个程序时，它会创建一个进程，来执行应用程序，并且伴随着资源的分配和释放。

Davik进程：
Dalvik虚拟机运行在Linux操作系统之上。
Davik进程就是Linux操作系统中的一个进程，属于linux进程
每个Android应用程序进程都有一个Dalvik虚拟机实例。这样做得好处是Android应用程序进程之间不会互相影响，也就是说，一个Android应用程序进程的意外终止，不会影响到其他的应用程序进程的正常运行。
线程：
线程是进程的一个实体，是CPU调度和分派的基本单位,它是比进程更小的能独立运行的基本单位。
线程自己基本上不拥有系统资源,在运行时，只需要必不可少的资源(如程序计数器,一组寄存器和栈)。
线程与同属一个进程的其他的线程共享进程所拥有的全部资源。
三者之间的联系：
Davik进程就是Linux操作系统的一个进程。
线程就是进程的一个实体，线程是进程的一部分。一个进程中可以提供多个线程执行控制。
进程和线程的区别：
1) 一个程序至少有一个进程,一个进程至少有一个线程.

2) 线程的划分尺度小于进程，使得多线程程序的并发性高。

3) 进程在执行过程中拥有独立的内存单元，而多个线程共享内存(同属一个进程)，从而极大地提高了程序的运行效率。

4) 每个独立的进程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。

5) 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。